import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from 'antd';
import { TeamModal } from './CreateTeam'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
import Cookies from 'js-cookie';

export interface User {
    email: string;
    role: string;
}

interface CampaignListProps {
    campaigns: any[];
    user: User | null;
    onJoinButtonClick: () => void; // –î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É
    // activeTab: string;
}   

export const CampaignList: React.FC<CampaignListProps> = ({ campaigns, user, onJoinButtonClick }) => {
    const [selectedCampaignId, setSelectedCampaignId] = useState<number | null>(null);
    const [isTeamModalVisible, setIsTeamModalVisible] = useState(false);
    const [isCreateTeam, setIsCreateTeam] = useState(true);

    const navigate = useNavigate();

    const handleParticipateClick = async (campaignId: number) => {
        if (!user) {
            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
            navigate('/login');
            return;
        }
        
        if (user) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–º–∞–Ω–¥–µ
            const response = await fetch(`http://127.0.0.1:5000/checkUserInTeam`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${Cookies.get('token')}`,
                },
                body: JSON.stringify({ userId: user.email, campaignId }),

            });

            const data = await response.json();

            if (data.isInTeam) {
                // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –∫–æ–º–∞–Ω–¥–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
                setSelectedCampaignId(campaignId);
                setIsTeamModalVisible(true);
                // –ü–µ—Ä–µ–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –∫–æ–º–∞–Ω–¥–µ
                // –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
                setIsCreateTeam(false); // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            } else {
                // –ï—Å–ª–∏ –Ω–µ –≤ –∫–æ–º–∞–Ω–¥–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
                setSelectedCampaignId(campaignId);
                setIsCreateTeam(true); // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
                setIsTeamModalVisible(true);
            }

            if (data.isInTeam) {
                console.log('ID –∫–æ–º–∞–Ω–¥—ã:', data.teamId);
                
                // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –∫–æ–º–∞–Ω–¥–µ, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–∞
                navigate(`/projects/${data.teamId}`); // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–∞ —Å teamId
            } else {
                // –ï—Å–ª–∏ –Ω–µ –≤ –∫–æ–º–∞–Ω–¥–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
                setSelectedCampaignId(campaignId);
                setIsCreateTeam(true); // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É
                setIsTeamModalVisible(true);
            }
        }
    };

    const handleTeamModalClose = () => {
        setIsTeamModalVisible(false);
        setSelectedCampaignId(null);
        setIsCreateTeam(true);
    };

    useEffect (() => {
        console.log(user)
    }, []);

    return (
        <div>
            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '60px', justifyContent: 'space-between'}}>
                {campaigns.map((campaign) => (
                    <div 
                        key={campaign.id} 
                        style={{ 
                            position: 'relative',
                            width: '620px',
                            height: '450px',
                            borderRadius: '32px',
                            overflow: 'hidden',
                            backgroundColor: '#f0f0f0',
                            // boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',
                            backgroundImage: `url(http://127.0.0.1:5000${campaign.image_url})`,
                            backgroundSize: 'cover',
                            backgroundPosition: 'center',
                            display: 'flex',
                            alignItems: 'flex-end',
                            cursor: 'pointer',
                        }}
                        onClick={() => navigate(`/actions/${campaign.id}`)}
                    >
                        <div
                            style={{
                                backgroundColor: '#f44336',
                                color: '#fff',
                                padding: '1rem',
                                borderRadius: '24px',
                                margin: '1rem',
                                minWidth: '80%',
                                minHeight: '50%',
                                maxWidth: 'calc(100% - 2rem)',
                                width: '80%',
                                boxSizing: 'border-box',
                                display: 'flex',
                                flexDirection: 'column',
                                justifyContent: 'space-between',
                                alignItems: 'start'
                            }}
                        >
                            <div>
                                <h3 style={{ margin: 0, fontWeight: 'bold' }}>{campaign.title}</h3>
                                <p style={{ fontSize: '12px', margin: '4px 0', fontWeight: '700' }}>
                                    {new Date(campaign.start_date).toLocaleDateString()} ‚Äî {' '}
                                    {new Date(campaign.end_date).toLocaleDateString()}
                                </p>
                            </div>
                            <p>{campaign.description}</p>
                            {/* <p style={{ fontSize: '12px', margin: '4px 0' }}>
                                –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: {new Date(campaign.start_date).toLocaleDateString()}, –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:{' '}
                                {new Date(campaign.end_date).toLocaleDateString()}
                            </p> */}
                            {/* {campaign.image_url && <img src={`http://127.0.0.1:5000${campaign.image_url}`} alt={campaign.title} style={{ maxWidth: '100%' }} />} */}
                            {user && (user.role === '—É—á–∞—Å—Ç–Ω–∏–∫' || user.role === '–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫' || user.role === '?–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫') ? (
                                <Button 
                                    onClick={(e: React.MouseEvent) => 
                                        {
                                            e.stopPropagation(); // üö´ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è, —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª onClick –∫–∞—Ä—Ç–æ—á–∫–∏
                                            handleParticipateClick(campaign.id); // —Ç–≤–æ—è –ª–æ–≥–∏–∫–∞ —É—á–∞—Å—Ç–∏—è
                                        }
                                    }
                                    style={{ borderRadius: '24px', marginTop: '8px', backgroundColor: '#fff' }}
                                >
                                    –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
                                </Button>
                            ) : (
                                !user && (
                                    <Button 
                                        onClick={(e: React.MouseEvent) => {
                                            e.stopPropagation();
                                            navigate('/login');
                                        }}
                                        style={{ borderRadius: '24px', marginTop: '8px', backgroundColor: '#fff' }}
                                    >
                                        –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å
                                    </Button>
                            )
                            )}
                        </div>
                    </div>
                ))}
            </div>
            {isTeamModalVisible && selectedCampaignId && (
                <TeamModal
                    campaignId={selectedCampaignId}
                    user={user} // –ü–µ—Ä–µ–¥–∞–µ–º user –≤ TeamModal
                    onClose={handleTeamModalClose}
                    isCreateTeam={isCreateTeam}
                />
            )}
        </div>
    );
};
