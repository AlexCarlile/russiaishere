{"ast":null,"code":"var _jsxFileName = \"/Users/alexselyukov/Documents/russiaishere/src/pages/AuthorizationPage/PrivateRoute.tsx\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = ({\n  authorized\n}) => {\n  if (authorized === undefined) {\n    return null; // или Spinner\n  }\n  return authorized ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 36\n  }, this);\n};\n_c = PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","PrivateRoute","authorized","undefined","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/Users/alexselyukov/Documents/russiaishere/src/pages/AuthorizationPage/PrivateRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n\ninterface PrivateRouteProps {\n  // children: JSX.Element;\n  authorized: boolean | undefined;\n}\n\nexport const PrivateRoute: React.FC<PrivateRouteProps> = ({ authorized }) => {\n  if (authorized === undefined) {\n    return null; // или Spinner\n  }\n\n  return authorized ? <Outlet /> : <Navigate to=\"/\" replace />;\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpD,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAC3E,IAAIA,UAAU,KAAKC,SAAS,EAAE;IAC5B,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,OAAOD,UAAU,gBAAGF,OAAA,CAACF,MAAM;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGP,OAAA,CAACH,QAAQ;IAACW,EAAE,EAAC,GAAG;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;AAACG,EAAA,GANWT,YAAyC;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}