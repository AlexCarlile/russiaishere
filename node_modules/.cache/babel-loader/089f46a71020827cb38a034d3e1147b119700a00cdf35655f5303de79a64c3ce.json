{"ast":null,"code":"var _jsxFileName = \"/Users/alexselyukov/Documents/russiaishere/src/pages/AuthorizationPage/Registration/RegistrationForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form, Input, Checkbox, Select, Upload, message, Row, Col } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { regions } from '../../../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 24,\n      offset: 0\n    }\n  }\n};\nexport const RegistrationForm = () => {\n  _s();\n  const [form] = Form.useForm();\n  const [selectedRegion, setSelectedRegion] = useState(''); // Хранение выбранного региона\n  const [localities, setLocalities] = useState([]); // Список населенных пунктов для выбранного региона\n  const [isMentor, setIsMentor] = useState(false);\n  const onRoleChange = value => {\n    setIsMentor(value === '?наставник');\n    // if (!isMentor) {\n    //     setIsMentor(true);\n    // } else {\n    //     setIsMentor(false);\n    // }\n  };\n  const handleRegionChange = value => {\n    const selectedRegionData = regions.find(region => region.label === value);\n    setLocalities(selectedRegionData ? selectedRegionData.locality : []);\n    form.setFieldsValue({\n      locality: undefined\n    }); // Сбрасываем значение locality при изменении региона\n  };\n  const handleUpload = async rawFile => {\n    const formData = new FormData();\n    formData.append('file', rawFile); // ключ 'file' совпадает с Flask\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      message.success('Файл успешно загружен');\n      return response.data.filename;\n    } catch (error) {\n      message.error('Ошибка при загрузке файла');\n      throw error;\n    }\n  };\n  const onFinish = async values => {\n    // Получаем значения формы\n    const {\n      region,\n      locality,\n      name,\n      surname,\n      email,\n      school,\n      password,\n      file,\n      role,\n      agreement\n    } = values;\n    let currentDate = null;\n    if (agreement) {\n      currentDate = new Date().toISOString(); // Если согласие дано, устанавливаем текущую дату\n    }\n    const dataToSend = {\n      region,\n      locality,\n      name,\n      surname,\n      email,\n      school,\n      password,\n      role,\n      // file,\n      agreement: agreement ? 'Да' : 'Нет',\n      currentDate\n    };\n    if (role === '?наставник' && file && file.length > 0) {\n      try {\n        const fileName = await handleUpload(file[0].originFileObj); // Дожидаемся завершения загрузки файла\n        console.log(fileName);\n        if (fileName.length > 0) {\n          dataToSend.file = fileName;\n        } else {\n          dataToSend.file = 'None';\n        }\n      } catch (error) {\n        console.error('Ошибка загрузки файла:', error);\n        message.error('Ошибка загрузки файла');\n        return;\n      }\n    }\n    try {\n      // Отправляем данные на сервер\n      const response = await axios.post('http://127.0.0.1:5000/register', dataToSend);\n      console.log('Registration successful:', response.data);\n      message.success('Регистрация прошла успешно');\n      setTimeout(() => {\n        window.location.reload();\n      }, 1500);\n    } catch (error) {\n      console.error('Registration failed:', error);\n      message.error('Ошибка при регистрации');\n    }\n  };\n\n  // Регулярное выражение для проверки на русские буквы, пробелы и тире\n  const russianLettersRegex = /^[А-Яа-яЁё\\s\\-]+$/;\n\n  // Функция для проверки валидности ввода\n  // const validateLocality = (rule: any, value: string) => {\n  //     if (!value) {\n  //     return Promise.reject('Заполните поле');\n  //     }\n  //     if (!russianLettersRegex.test(value)) {\n  //     return Promise.reject('Пожалуйста, введите только кириллические буквы');\n  //     }\n  //     return Promise.resolve();\n  // };\n\n  const validateLocality = (_, value) => {\n    if (value && !russianLettersRegex.test(value)) {\n      return Promise.reject('Пожалуйста, введите только кириллические буквы');\n    }\n    return Promise.resolve();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      width: '100%',\n      margin: '0 auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      onFinish: onFinish,\n      layout: \"vertical\",\n      variant: \"filled\",\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"\\u0418\\u043C\\u044F\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: 'Заполните поле'\n        }, {\n          validator: validateLocality\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n        name: \"surname\",\n        rules: [{\n          required: true,\n          message: 'Заполните поле'\n        }, {\n          validator: validateLocality\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"email\",\n        label: \"E-mail\",\n        rules: [{\n          type: 'email',\n          message: 'Вы ввели некорректный e-mail'\n        }, {\n          required: true,\n          message: 'Заполните поле'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D\",\n            name: \"region\",\n            rules: [{\n              required: true,\n              message: 'Выберите регион!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              showSearch: true,\n              placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\",\n              optionFilterProp: \"label\",\n              onChange: handleRegionChange,\n              filterOption: (input, option) => (option === null || option === void 0 ? void 0 : option.label).toLowerCase().includes(input.toLowerCase()),\n              children: regions.map((region, index) => /*#__PURE__*/_jsxDEV(Option, {\n                value: region.label,\n                label: region.label,\n                children: region.label\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u041D\\u0430\\u0441\\u0435\\u043B\\u0451\\u043D\\u043D\\u044B\\u0439 \\u043F\\u0443\\u043D\\u043A\\u0442\",\n            name: \"locality\",\n            rules: [{\n              required: true,\n              message: 'Выберите населённый пункт!'\n            }, {\n              validator: validateLocality\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              showSearch: true,\n              placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043D\\u0430\\u0441\\u0435\\u043B\\u0451\\u043D\\u043D\\u044B\\u0439 \\u043F\\u0443\\u043D\\u043A\\u0442\",\n              optionFilterProp: \"label\",\n              filterOption: (input, option) => (option === null || option === void 0 ? void 0 : option.label).toLowerCase().includes(input.toLowerCase()),\n              children: localities.map((locality, index) => /*#__PURE__*/_jsxDEV(Option, {\n                value: locality,\n                label: locality,\n                children: locality\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0448\\u043A\\u043E\\u043B\\u044B\",\n        name: \"school\",\n        rules: [{\n          required: true,\n          message: 'Заполниет поле'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"password\",\n            label: \"\\u041F\\u0440\\u0438\\u0434\\u0443\\u043C\\u0430\\u0439\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            rules: [{\n              required: true,\n              message: 'Пожалуста, введите пароль!'\n            }],\n            hasFeedback: true,\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"confirm\",\n            label: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            dependencies: ['password'],\n            hasFeedback: true,\n            rules: [{\n              required: true,\n              message: 'Пожалуйста, повторите пароль!'\n            }, ({\n              getFieldValue\n            }) => ({\n              validator(_, value) {\n                if (!value || getFieldValue('password') === value) {\n                  return Promise.resolve();\n                }\n                return Promise.reject(new Error('The new password that you entered do not match!'));\n              }\n            })],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 16,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"role\",\n            label: \"\\u0412\\u044B \\u043D\\u0430\\u0441\\u0442\\u0430\\u0432\\u043D\\u0438\\u043A?\",\n            tooltip: \"\\u0412\\u044B \\u0434\\u043E\\u043B\\u0436\\u043D\\u044B \\u0431\\u044B\\u0442\\u044C \\u0448\\u043A\\u043E\\u043B\\u044C\\u043D\\u044B\\u043C \\u0443\\u0447\\u0438\\u0442\\u0435\\u043B\\u0435\\u043C \\u0438 \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442 \\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0430\\u044E\\u0449\\u0438\\u0439 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: \"\\u041D\\u0435\\u0442\",\n              style: {\n                width: 120\n              },\n              onChange: onRoleChange,\n              options: [{\n                value: '?наставник',\n                label: 'Да'\n              }, {\n                value: 'участник',\n                label: 'Нет'\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), isMentor ? /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"file\",\n            label: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\",\n            valuePropName: \"fileList\",\n            getValueFromEvent: e => Array.isArray(e) ? e : e && e.fileList,\n            rules: [{\n              required: true,\n              message: 'Загрузите файл подтверждающий статус'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Upload, {\n              name: \"file\"\n              // customRequest={handleUpload}\n              ,\n              beforeUpload: () => false // Отключаем автоматическую загрузку\n              ,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 51\n                }, this),\n                children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"agreement\",\n        valuePropName: \"checked\",\n        rules: [{\n          validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('Подтвердите свое согласие'))\n        }],\n        ...tailFormItemLayout,\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"\\u0414\\u0430\\u044E \\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0438\\u0435 \\u043D\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0434\\u0430\\u0447\\u0443 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 6,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"login-form-button\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_s(RegistrationForm, \"R3M3pmZ2rrIZ/lH4nPsErQhdq0k=\", false, function () {\n  return [Form.useForm];\n});\n_c = RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","Button","Form","Input","Checkbox","Select","Upload","message","Row","Col","UploadOutlined","axios","regions","jsxDEV","_jsxDEV","Option","tailFormItemLayout","wrapperCol","xs","span","offset","sm","RegistrationForm","_s","form","useForm","selectedRegion","setSelectedRegion","localities","setLocalities","isMentor","setIsMentor","onRoleChange","value","handleRegionChange","selectedRegionData","find","region","label","locality","setFieldsValue","undefined","handleUpload","rawFile","formData","FormData","append","response","post","headers","success","data","filename","error","onFinish","values","name","surname","email","school","password","file","role","agreement","currentDate","Date","toISOString","dataToSend","length","fileName","originFileObj","console","log","setTimeout","window","location","reload","russianLettersRegex","validateLocality","_","test","Promise","reject","resolve","style","maxWidth","width","margin","children","layout","variant","Item","rules","required","validator","_jsxFileName","lineNumber","columnNumber","type","gutter","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","toLowerCase","includes","map","index","hasFeedback","Password","dependencies","getFieldValue","Error","tooltip","defaultValue","options","valuePropName","getValueFromEvent","e","Array","isArray","fileList","beforeUpload","icon","htmlType","className","_c","$RefreshReg$"],"sources":["/Users/alexselyukov/Documents/russiaishere/src/pages/AuthorizationPage/Registration/RegistrationForm.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Button,\n    Form,\n    Input,\n    Checkbox,\n    Select,\n    Upload,\n    message,\n    Row,\n    Col\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { regions } from '../../../data';\n\nconst { Option } = Select;\n\nconst tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 24,\n        offset: 0,\n      },\n    },\n};\n\nexport const RegistrationForm: React.FC = () => {\n    const [form] = Form.useForm();\n    const [selectedRegion, setSelectedRegion] = useState<string>(''); // Хранение выбранного региона\n    const [localities, setLocalities] = useState<string[]>([]); // Список населенных пунктов для выбранного региона\n    const [isMentor, setIsMentor] = useState<boolean>(false);\n\n    const onRoleChange = (value: string) => {\n        setIsMentor(value === '?наставник');\n        // if (!isMentor) {\n        //     setIsMentor(true);\n        // } else {\n        //     setIsMentor(false);\n        // }\n    };\n\n    const handleRegionChange = (value: string) => {\n        const selectedRegionData = regions.find(region => region.label === value);\n        setLocalities(selectedRegionData ? selectedRegionData.locality : []);\n        form.setFieldsValue({ locality: undefined }); // Сбрасываем значение locality при изменении региона\n    };\n\n    const handleUpload = async (rawFile: any) => {\n        const formData = new FormData();\n        formData.append('file', rawFile);  // ключ 'file' совпадает с Flask\n\n        try {\n            const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            message.success('Файл успешно загружен');\n            return response.data.filename;\n        } catch (error) {\n            message.error('Ошибка при загрузке файла');\n            throw error;\n        }\n    };\n\n    const onFinish = async (values: any) => {\n        // Получаем значения формы\n        const { region, locality, name, surname, email, school, password, file, role, agreement } = values;\n        \n        let currentDate = null;\n\n        if (agreement) {\n            currentDate = new Date().toISOString(); // Если согласие дано, устанавливаем текущую дату\n        }\n\n        const dataToSend: any = {\n            region,\n            locality,\n            name,\n            surname,\n            email,\n            school,\n            password,\n            role,\n            // file,\n            agreement: agreement ? 'Да' : 'Нет',\n            currentDate,\n        };\n\n        if (role === '?наставник' && file && file.length > 0) {\n            try {\n                const fileName = await handleUpload(file[0].originFileObj);// Дожидаемся завершения загрузки файла\n                console.log(fileName)\n                if (fileName.length > 0) {\n                    dataToSend.file = fileName;\n                } else {\n                    dataToSend.file = 'None';\n                }\n            } catch (error) {\n                console.error('Ошибка загрузки файла:', error);\n                message.error('Ошибка загрузки файла');\n                return;\n            }\n        }\n        \n        try {\n            // Отправляем данные на сервер\n            const response = await axios.post('http://127.0.0.1:5000/register', dataToSend);\n            console.log('Registration successful:', response.data);\n            message.success('Регистрация прошла успешно');\n            setTimeout(() => {\n                window.location.reload();\n              }, 1500);\n\n        } catch (error) {\n            console.error('Registration failed:', error);\n            message.error('Ошибка при регистрации');\n        }\n    };\n\n    // Регулярное выражение для проверки на русские буквы, пробелы и тире\n    const russianLettersRegex = /^[А-Яа-яЁё\\s\\-]+$/;\n\n    // Функция для проверки валидности ввода\n    // const validateLocality = (rule: any, value: string) => {\n    //     if (!value) {\n    //     return Promise.reject('Заполните поле');\n    //     }\n    //     if (!russianLettersRegex.test(value)) {\n    //     return Promise.reject('Пожалуйста, введите только кириллические буквы');\n    //     }\n    //     return Promise.resolve();\n    // };\n\n    const validateLocality = (_: any, value: string) => {\n        if (value && !russianLettersRegex.test(value)) {\n            return Promise.reject('Пожалуйста, введите только кириллические буквы');\n        }\n        return Promise.resolve();\n    };\n\n\n    return (\n        <div style={{ maxWidth: '600px', width: '100%', margin: '0 auto' }}>\n            <Form form={form} onFinish={onFinish} layout=\"vertical\" variant=\"filled\" style={{ width: '100%' }}>\n                <Form.Item \n                    label=\"Имя\" \n                    name=\"name\" \n                    rules={[\n                        { required: true, message: 'Заполните поле' },\n                        { validator: validateLocality }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                \n                <Form.Item \n                    label=\"Фамилия\" \n                    name=\"surname\"\n                    rules={[\n                        { required: true, message: 'Заполните поле' },\n                        { validator: validateLocality }\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n                \n                <Form.Item\n                    name=\"email\"\n                    label=\"E-mail\"\n                    rules={[\n                    {\n                        type: 'email',\n                        message: 'Вы ввели некорректный e-mail',\n                    },\n                    {\n                        required: true,\n                        message: 'Заполните поле',\n                    },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"Регион\"\n                            name=\"region\"\n                            rules={[{ required: true, message: 'Выберите регион!' }]}\n                            >\n                            <Select\n                                showSearch\n                                placeholder=\"Выберите ваш регион\"\n                                optionFilterProp=\"label\"\n                                onChange={handleRegionChange}\n                                filterOption={(input, option) =>\n                                (option?.label as string).toLowerCase().includes(input.toLowerCase())\n                                }\n                            >\n                                {regions.map((region, index) => (\n                                <Option key={index} value={region.label} label={region.label}>\n                                    {region.label}\n                                </Option>\n                                ))}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n\n                    <Col span={12}>\n                        <Form.Item\n                            label=\"Населённый пункт\"\n                            name=\"locality\"\n                            rules={[\n                                { required: true, message: 'Выберите населённый пункт!' },\n                                { validator: validateLocality },\n                            ]}\n                            >\n                            <Select\n                                showSearch\n                                placeholder=\"Выберите ваш населённый пункт\"\n                                optionFilterProp=\"label\"\n                                filterOption={(input, option) =>\n                                (option?.label as string).toLowerCase().includes(input.toLowerCase())\n                                }\n                            >\n                                {localities.map((locality, index) => (\n                                <Option key={index} value={locality} label={locality}>\n                                    {locality}\n                                </Option>\n                                ))}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n                <Form.Item\n                    label=\"Название школы\"\n                    name=\"school\"\n                    rules={[\n                        { required: true, message: 'Заполниет поле' },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"password\"\n                            label=\"Придумайте пароль\"\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Пожалуста, введите пароль!',\n                            },\n                            ]}\n                            hasFeedback\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"confirm\"\n                            label=\"Повторите пароль\"\n                            dependencies={['password']}\n                            hasFeedback\n                            rules={[\n                            {\n                                required: true,\n                                message: 'Пожалуйста, повторите пароль!',\n                            },\n                            ({ getFieldValue }) => ({\n                                validator(_, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject(new Error('The new password that you entered do not match!'));\n                                },\n                            }),\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                    </Col>\n                </Row>\n                \n                <Row gutter={16}>\n                    <Col span={12}>\n                        <Form.Item\n                            name=\"role\"\n                            label=\"Вы наставник?\"\n                            tooltip=\"Вы должны быть школьным учителем и предоставить документ подтверждающий статус\"\n                        >\n                            <Select\n                                defaultValue=\"Нет\"\n                                style={{ width: 120 }}\n                                onChange={onRoleChange}\n                                options={[\n                                    { value: '?наставник', label: 'Да' },\n                                    { value: 'участник', label: 'Нет' },\n                                ]}\n                            />\n                        </Form.Item>\n                    </Col>\n\n                    {\n                        isMentor \n                        ?\n                        <Col span={12}>\n                            <Form.Item\n                                name=\"file\"\n                                label=\"Загрузите файл\"\n                                valuePropName=\"fileList\"\n                                getValueFromEvent={(e) => (Array.isArray(e) ? e : e && e.fileList)}\n                                rules={[{ required: true, message: 'Загрузите файл подтверждающий статус' }]}\n                            >\n                                <Upload \n                                    name=\"file\"\n                                    // customRequest={handleUpload}\n                                    beforeUpload={() => false} // Отключаем автоматическую загрузку\n                                >\n                                    <Button icon={<UploadOutlined />}>Загрузить</Button>\n                                </Upload>\n                            </Form.Item>\n                        </Col>\n\n                        : null\n                    }\n                </Row>\n\n                <Form.Item\n                    name=\"agreement\"\n                    valuePropName=\"checked\"\n                    rules={[\n                    {\n                        validator: (_, value) =>\n                        value ? Promise.resolve() : Promise.reject(new Error('Подтвердите свое согласие')),\n                    },\n                    ]}\n                    {...tailFormItemLayout}\n                >\n                    <Checkbox>\n                        Даю согласие на передачу персональных данных\n                    </Checkbox>\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 6, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\" className='login-form-button'>\n                        Зарегистрироваться\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}