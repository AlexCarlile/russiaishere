{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jwtDecode}from'jwt-decode';import Cookies from'js-cookie';// Создаем контекст для авторизации\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);// Создаем провайдер для контекста\nexport const AuthProvider=_ref=>{let{children}=_ref;const[authorized,setAuthorized]=useState(true);useEffect(()=>{const checkAuthorization=()=>{const token=Cookies.get('token');if(!token)return false;try{const decodedToken=jwtDecode(token);if(!decodedToken.exp)return false;const currentTime=Date.now()/1000;if(decodedToken.exp<currentTime)return false;return true;}catch(error){console.error(\"Failed to decode token:\",error);return false;}};const status=checkAuthorization();setAuthorized(status);},[]);const toggleAuthorized=param=>{setAuthorized(param);};const contextValue={authorized,toggleAuthorized};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:contextValue,children:children});};// Хук для использования контекста в компонентах\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jwtDecode","Cookies","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","authorized","setAuthorized","checkAuthorization","token","get","decodedToken","exp","currentTime","Date","now","error","console","status","toggleAuthorized","param","contextValue","Provider","value","useAuth","context","Error"],"sources":["/Users/alexselyukov/Documents/napp/portal/src/store/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport Cookies from 'js-cookie';\n\n// Создаем контекст для авторизации\ntype AuthContextType = {\n  authorized: boolean | undefined;\n  toggleAuthorized: (param: boolean) => void;\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Создаем провайдер для контекста\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [authorized, setAuthorized] = useState<boolean | undefined>(true);\n\n  useEffect(() => {\n    const checkAuthorization = () => {\n      const token = Cookies.get('token');\n      if (!token) return false;\n\n      try {\n        const decodedToken = jwtDecode(token);\n        if (!decodedToken.exp) return false;\n\n        const currentTime = Date.now() / 1000;\n        if (decodedToken.exp < currentTime) return false;\n\n        return true;\n      } catch (error) {\n        console.error(\"Failed to decode token:\", error);\n        return false;\n      }\n    };\n\n    const status = checkAuthorization();\n    setAuthorized(status);\n  }, []);\n\n  const toggleAuthorized = (param: boolean) => {\n    setAuthorized(param);\n  };\n\n  const contextValue: AuthContextType = {\n    authorized,\n    toggleAuthorized\n  };\n\n  return <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>;\n};\n\n// Хук для использования контекста в компонентах\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OAASC,SAAS,KAAQ,YAAY,CACtC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAE/B;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAMA,KAAM,CAAAC,WAAW,cAAGR,aAAa,CAA8BS,SAAS,CAAC,CAEzE;AACA,MAAO,MAAM,CAAAC,YAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChF,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAsB,IAAI,CAAC,CAEvEC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,KAAK,CAAGX,OAAO,CAACY,GAAG,CAAC,OAAO,CAAC,CAClC,GAAI,CAACD,KAAK,CAAE,MAAO,MAAK,CAExB,GAAI,CACF,KAAM,CAAAE,YAAY,CAAGd,SAAS,CAACY,KAAK,CAAC,CACrC,GAAI,CAACE,YAAY,CAACC,GAAG,CAAE,MAAO,MAAK,CAEnC,KAAM,CAAAC,WAAW,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CACrC,GAAIJ,YAAY,CAACC,GAAG,CAAGC,WAAW,CAAE,MAAO,MAAK,CAEhD,MAAO,KAAI,CACb,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,MAAO,MAAK,CACd,CACF,CAAC,CAED,KAAM,CAAAE,MAAM,CAAGV,kBAAkB,CAAC,CAAC,CACnCD,aAAa,CAACW,MAAM,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,gBAAgB,CAAIC,KAAc,EAAK,CAC3Cb,aAAa,CAACa,KAAK,CAAC,CACtB,CAAC,CAED,KAAM,CAAAC,YAA6B,CAAG,CACpCf,UAAU,CACVa,gBACF,CAAC,CAED,mBAAOnB,IAAA,CAACC,WAAW,CAACqB,QAAQ,EAACC,KAAK,CAAEF,YAAa,CAAAhB,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CACrF,CAAC,CAED;AACA,MAAO,MAAM,CAAAmB,OAAO,CAAGA,CAAA,GAAuB,CAC5C,KAAM,CAAAC,OAAO,CAAG/B,UAAU,CAACO,WAAW,CAAC,CACvC,GAAI,CAACwB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}