{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{Button}from'antd';import{TeamModal}from'./CreateTeam';// Импортируем модальное окно для работы с командами\nimport Cookies from'js-cookie';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const CampaignList=_ref=>{let{campaigns,user,onJoinButtonClick,activeTab}=_ref;const[selectedCampaignId,setSelectedCampaignId]=useState(null);const[isTeamModalVisible,setIsTeamModalVisible]=useState(false);const[isCreateTeam,setIsCreateTeam]=useState(true);const navigate=useNavigate();const handleParticipateClick=async campaignId=>{if(user){// Проверяем, есть ли пользователь в команде\nconst response=await fetch(\"http://127.0.0.1:5000/checkUserInTeam\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(Cookies.get('token'))},body:JSON.stringify({userId:user.email,campaignId})});const data=await response.json();if(data.isInTeam){// Если пользователь уже в команде, показываем модальное окно для продолжения работы\nsetSelectedCampaignId(campaignId);setIsTeamModalVisible(true);// Передаем информацию о том, что пользователь уже в команде\n// Это поможет модальному окну отобразить правильные опции\nsetIsCreateTeam(false);// Указываем, что команда уже существует\n}else{// Если не в команде, показываем модальное окно для создания команды\nsetSelectedCampaignId(campaignId);setIsCreateTeam(true);// Указываем, что нужно создать новую команду\nsetIsTeamModalVisible(true);}if(data.isInTeam){console.log('ID команды:',data.teamId);// Если пользователь уже в команде, перенаправляем на страницу проекта\nnavigate(\"/projects/\".concat(data.teamId));// Переход на страницу проекта с teamId\n}else{// Если не в команде, показываем модальное окно для создания команды\nsetSelectedCampaignId(campaignId);setIsCreateTeam(true);// Указываем, что нужно создать новую команду\nsetIsTeamModalVisible(true);}}};const handleTeamModalClose=()=>{setIsTeamModalVisible(false);setSelectedCampaignId(null);setIsCreateTeam(true);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'space-between',flexWrap:'wrap',width:'100%'},children:campaigns.map(campaign=>/*#__PURE__*/_jsxs(\"div\",{style:{width:'300px',border:'1px solid #ccc',padding:'1rem',marginBottom:'1rem'},children:[/*#__PURE__*/_jsx(\"h3\",{children:campaign.title}),/*#__PURE__*/_jsx(\"p\",{children:campaign.description}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430: \",new Date(campaign.start_date).toLocaleDateString(),\", \\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F:\",' ',new Date(campaign.end_date).toLocaleDateString()]}),campaign.image_url&&/*#__PURE__*/_jsx(\"img\",{src:\"http://127.0.0.1:5000\".concat(campaign.image_url),alt:campaign.title,style:{maxWidth:'100%'}}),user&&(user.role==='участник'||user.role==='наставник'||user.role==='?наставник')&&activeTab==='current'&&/*#__PURE__*/_jsx(Button,{onClick:()=>handleParticipateClick(campaign.id),children:\"\\u0423\\u0447\\u0430\\u0441\\u0442\\u0432\\u043E\\u0432\\u0430\\u0442\\u044C\"})]},campaign.id))}),isTeamModalVisible&&selectedCampaignId&&/*#__PURE__*/_jsx(TeamModal,{campaignId:selectedCampaignId,user:user// Передаем user в TeamModal\n,onClose:handleTeamModalClose,isCreateTeam:isCreateTeam})]});};","map":{"version":3,"names":["React","useState","useNavigate","Button","TeamModal","Cookies","jsx","_jsx","jsxs","_jsxs","CampaignList","_ref","campaigns","user","onJoinButtonClick","activeTab","selectedCampaignId","setSelectedCampaignId","isTeamModalVisible","setIsTeamModalVisible","isCreateTeam","setIsCreateTeam","navigate","handleParticipateClick","campaignId","response","fetch","method","headers","concat","get","body","JSON","stringify","userId","email","data","json","isInTeam","console","log","teamId","handleTeamModalClose","children","style","display","justifyContent","flexWrap","width","map","campaign","border","padding","marginBottom","title","description","Date","start_date","toLocaleDateString","end_date","image_url","src","alt","maxWidth","role","onClick","id","onClose"],"sources":["/Users/alexselyukov/Documents/napp/portal/src/pages/ActionsPage/ActionContent/CampaignList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { TeamModal } from './CreateTeam'; // Импортируем модальное окно для работы с командами\nimport Cookies from 'js-cookie';\n\nexport interface User {\n    email: string;\n    role: string;\n}\n\ninterface CampaignListProps {\n    campaigns: any[];\n    user: User | null;\n    onJoinButtonClick: () => void; // Добавьте обработчик клика на кнопку\n    activeTab: string;\n}   \n\nexport const CampaignList: React.FC<CampaignListProps> = ({ campaigns, user, onJoinButtonClick, activeTab  }) => {\n    const [selectedCampaignId, setSelectedCampaignId] = useState<number | null>(null);\n    const [isTeamModalVisible, setIsTeamModalVisible] = useState(false);\n    const [isCreateTeam, setIsCreateTeam] = useState(true);\n\n    const navigate = useNavigate();\n\n    const handleParticipateClick = async (campaignId: number) => {\n        if (user) {\n            // Проверяем, есть ли пользователь в команде\n            const response = await fetch(`http://127.0.0.1:5000/checkUserInTeam`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${Cookies.get('token')}`,\n                },\n                body: JSON.stringify({ userId: user.email, campaignId }),\n\n            });\n\n            const data = await response.json();\n\n            if (data.isInTeam) {\n                // Если пользователь уже в команде, показываем модальное окно для продолжения работы\n                setSelectedCampaignId(campaignId);\n                setIsTeamModalVisible(true);\n                // Передаем информацию о том, что пользователь уже в команде\n                // Это поможет модальному окну отобразить правильные опции\n                setIsCreateTeam(false); // Указываем, что команда уже существует\n            } else {\n                // Если не в команде, показываем модальное окно для создания команды\n                setSelectedCampaignId(campaignId);\n                setIsCreateTeam(true); // Указываем, что нужно создать новую команду\n                setIsTeamModalVisible(true);\n            }\n\n            if (data.isInTeam) {\n                console.log('ID команды:', data.teamId);\n                \n                // Если пользователь уже в команде, перенаправляем на страницу проекта\n                navigate(`/projects/${data.teamId}`); // Переход на страницу проекта с teamId\n            } else {\n                // Если не в команде, показываем модальное окно для создания команды\n                setSelectedCampaignId(campaignId);\n                setIsCreateTeam(true); // Указываем, что нужно создать новую команду\n                setIsTeamModalVisible(true);\n            }\n        }\n    };\n\n    const handleTeamModalClose = () => {\n        setIsTeamModalVisible(false);\n        setSelectedCampaignId(null);\n        setIsCreateTeam(true);\n    };\n\n    return (\n        <div>\n            <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', width: '100%' }}>\n                {campaigns.map((campaign) => (\n                    <div key={campaign.id} style={{ width: '300px', border: '1px solid #ccc', padding: '1rem', marginBottom: '1rem' }}>\n                        <h3>{campaign.title}</h3>\n                        <p>{campaign.description}</p>\n                        <p>\n                            Дата начала: {new Date(campaign.start_date).toLocaleDateString()}, Дата окончания:{' '}\n                            {new Date(campaign.end_date).toLocaleDateString()}\n                        </p>\n                        {campaign.image_url && <img src={`http://127.0.0.1:5000${campaign.image_url}`} alt={campaign.title} style={{ maxWidth: '100%' }} />}\n                        {user && (user.role === 'участник' || user.role === 'наставник' || user.role === '?наставник') && activeTab === 'current' &&\n                            <Button onClick={() => handleParticipateClick(campaign.id)}>\n                                Участвовать\n                            </Button>\n                        }\n                    </div>\n                ))}\n            </div>\n            {isTeamModalVisible && selectedCampaignId && (\n                <TeamModal\n                    campaignId={selectedCampaignId}\n                    user={user} // Передаем user в TeamModal\n                    onClose={handleTeamModalClose}\n                    isCreateTeam={isCreateTeam}\n                />\n            )}\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}