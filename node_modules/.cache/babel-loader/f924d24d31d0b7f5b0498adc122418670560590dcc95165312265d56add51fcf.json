{"ast":null,"code":"import React from'react';import{partners}from'./PartnersList';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const partnersTyped=partners;export const PartnersContent=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"partners-container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"partners-title\",children:\"\\u041F\\u0430\\u0440\\u0442\\u043D\\u0451\\u0440\\u044B \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"}),/*#__PURE__*/_jsx(\"div\",{children:Object.keys(partners).map(key=>/*#__PURE__*/_jsx(\"img\",{src:partners[key],alt:key},key))})]});};","map":{"version":3,"names":["React","partners","jsx","_jsx","jsxs","_jsxs","partnersTyped","PartnersContent","className","children","Object","keys","map","key","src","alt"],"sources":["/Users/alexselyukov/Documents/napp/portal/src/pages/PartnersPage/PartnersContent/PartnersContent.tsx"],"sourcesContent":["import React from 'react';\nimport { partners } from './PartnersList';\n\ntype PartnerImages = {\n    [key: string]: string; // Указываем, что ключи - строки, а значения - строки (URL изображений)\n};\n\nconst partnersTyped: PartnerImages = partners;\n\nexport const PartnersContent = () => {\n    return (\n        <div className=\"partners-container\">\n            <h2 className=\"partners-title\">Партнёры проекта</h2>\n            <div>\n                {Object.keys(partners).map((key) => (\n                    <img key={key} src={partners[key]} alt={key} />\n                ))}\n            </div>\n        </div>\n    );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAM1C,KAAM,CAAAC,aAA4B,CAAGL,QAAQ,CAE7C,MAAO,MAAM,CAAAM,eAAe,CAAGA,CAAA,GAAM,CACjC,mBACIF,KAAA,QAAKG,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAC/BN,IAAA,OAAIK,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,6FAAgB,CAAI,CAAC,cACpDN,IAAA,QAAAM,QAAA,CACKC,MAAM,CAACC,IAAI,CAACV,QAAQ,CAAC,CAACW,GAAG,CAAEC,GAAG,eAC3BV,IAAA,QAAeW,GAAG,CAAEb,QAAQ,CAACY,GAAG,CAAE,CAACE,GAAG,CAAEF,GAAI,EAAlCA,GAAoC,CACjD,CAAC,CACD,CAAC,EACL,CAAC,CAEd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}