{"ast":null,"code":"import React,{useState}from'react';import{Button,Form,Input,Checkbox,Select,Upload,message}from'antd';import{UploadOutlined}from'@ant-design/icons';import axios from'axios';import{regions}from'../../../data';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Option}=Select;const formItemLayout={labelCol:{xs:{span:24},sm:{span:6}},wrapperCol:{xs:{span:24},sm:{span:14}}};const tailFormItemLayout={wrapperCol:{xs:{span:24,offset:0},sm:{span:16,offset:8}}};export const RegistrationForm=()=>{const[form]=Form.useForm();const[selectedRegion,setSelectedRegion]=useState('');// Хранение выбранного региона\nconst[localities,setLocalities]=useState([]);// Список населенных пунктов для выбранного региона\nconst[isMentor,setIsMentor]=useState(false);const onRoleChange=value=>{if(!isMentor){setIsMentor(true);}else{setIsMentor(false);}};const handleRegionChange=value=>{const selectedRegionData=regions.find(region=>region.label===value);setLocalities(selectedRegionData?selectedRegionData.locality:[]);form.setFieldsValue({locality:undefined});// Сбрасываем значение locality при изменении региона\n};const handleUpload=async file=>{const formData=new FormData();formData.append('file',file);try{const response=await axios.post('http://127.0.0.1:5000/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});message.success('Файл успешно загружен');console.log('Файл успешно загружен:',response.data);return file.name;// Возвращаем имя файла\n}catch(error){if(axios.isAxiosError(error)){message.error('Ошибка при загрузке файла');console.error('Ошибка загрузки файла:',error.response?error.response.data:error.message);}else{console.error('Ошибка:',error);}throw error;}};const onFinish=async values=>{// Получаем значения формы\nconst{region,locality,name,surname,email,school,password,file,role,agreement}=values;let currentDate=null;if(agreement){currentDate=new Date().toISOString();// Если согласие дано, устанавливаем текущую дату\n}const dataToSend={region,locality,name,surname,email,school,password,role,// file,\nagreement:agreement?'Да':'Нет',currentDate};if(role==='?наставник'&&file&&file.length>0){try{const fileName=await handleUpload(file[0].originFileObj);// Дожидаемся завершения загрузки файла\nconsole.log(fileName);if(fileName.length>0){dataToSend.file=fileName;}else{dataToSend.file='None';}}catch(error){console.error('Ошибка загрузки файла:',error);message.error('Ошибка загрузки файла');return;}}try{// Отправляем данные на сервер\nconst response=await axios.post('http://127.0.0.1:5000/register',dataToSend);console.log('Registration successful:',response.data);message.success('Регистрация прошла успешно');setTimeout(()=>{window.location.reload();},1500);}catch(error){console.error('Registration failed:',error);message.error('Ошибка при регистрации');}};// Регулярное выражение для проверки на русские буквы, пробелы и тире\nconst russianLettersRegex=/^[А-Яа-яЁё\\s\\-]+$/;// Функция для проверки валидности ввода\nconst validateLocality=(rule,value)=>{if(!value){return Promise.reject('Заполните поле');}if(!russianLettersRegex.test(value)){return Promise.reject('Пожалуйста, введите только кириллические буквы');}return Promise.resolve();};return/*#__PURE__*/_jsxs(Form,{form:form,onFinish:onFinish,...formItemLayout,variant:\"filled\",style:{width:600,justifySelf:\"center\"},children:[/*#__PURE__*/_jsx(Form.Item,{label:\"\\u0418\\u043C\\u044F\",name:\"name\",rules:[{required:true,message:'Заполните поле'},{validator:validateLocality}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",name:\"surname\",rules:[{required:true,message:'Заполните поле'},{validator:validateLocality}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"email\",label:\"E-mail\",rules:[{type:'email',message:'The input is not valid E-mail!'},{required:true,message:'Please input your E-mail!'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D\",name:\"region\",rules:[{required:true,message:'Выберите регион!'}],children:/*#__PURE__*/_jsx(Select,{showSearch:true,style:{width:200},placeholder:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\",optionFilterProp:\"children\",filterOption:(input,option)=>option!==null&&option!==void 0&&option.children?option.children.toString().toLowerCase().indexOf(input.toLowerCase())>=0:false,onChange:handleRegionChange// Обработчик изменения выбранного региона\n,children:regions.map((region,index)=>/*#__PURE__*/_jsx(Option,{value:region.label,children:region.label},index))})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\u041D\\u0430\\u0441\\u0435\\u043B\\u0435\\u043D\\u043D\\u044B\\u0439 \\u043F\\u0443\\u043D\\u043A\\u0442\",name:\"locality\",rules:[{required:true,message:'Выберите населенный пункт!'},{validator:validateLocality}],children:/*#__PURE__*/_jsx(Select,{showSearch:true,style:{width:200},placeholder:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043D\\u0430\\u0441\\u0435\\u043B\\u0435\\u043D\\u043D\\u044B\\u0439 \\u043F\\u0443\\u043D\\u043A\\u0442\",optionFilterProp:\"children\",filterOption:(input,option)=>option!==null&&option!==void 0&&option.children?option.children.toString().toLowerCase().indexOf(input.toLowerCase())>=0:false,children:localities.map((locality,index)=>/*#__PURE__*/_jsx(Option,{value:locality,children:locality},index))})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0448\\u043A\\u043E\\u043B\\u044B\",name:\"school\",rules:[{required:true,message:'Заполниет поле'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"password\",label:\"\\u041F\\u0440\\u0438\\u0434\\u0443\\u043C\\u0430\\u0439\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",rules:[{required:true,message:'Please input your password!'}],hasFeedback:true,children:/*#__PURE__*/_jsx(Input.Password,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"confirm\",label:\"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",dependencies:['password'],hasFeedback:true,rules:[{required:true,message:'Please confirm your password!'},_ref=>{let{getFieldValue}=_ref;return{validator(_,value){if(!value||getFieldValue('password')===value){return Promise.resolve();}return Promise.reject(new Error('The new password that you entered do not match!'));}};}],children:/*#__PURE__*/_jsx(Input.Password,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"role\",label:\"\\u0412\\u044B \\u043D\\u0430\\u0441\\u0442\\u0430\\u0432\\u043D\\u0438\\u043A?\",tooltip:\"\\u0412\\u044B \\u0434\\u043E\\u043B\\u0436\\u043D\\u044B \\u0431\\u044B\\u0442\\u044C \\u0448\\u043A\\u043E\\u043B\\u044C\\u043D\\u044B\\u043C \\u0443\\u0447\\u0438\\u0442\\u0435\\u043B\\u0435\\u043C \\u0438 \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442 \\u043F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0430\\u044E\\u0449\\u0438\\u0439 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\",children:/*#__PURE__*/_jsx(Select,{defaultValue:\"\\u041D\\u0435\\u0442\",style:{width:120},onChange:onRoleChange,options:[{value:'?наставник',label:'Да'},{value:'участник',label:'Нет'}]})}),isMentor?/*#__PURE__*/_jsx(Form.Item,{name:\"file\",label:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\",valuePropName:\"fileList\",getValueFromEvent:e=>Array.isArray(e)?e:e&&e.fileList,rules:[{required:true,message:'Загрузите файл подтверждающий статус'}],children:/*#__PURE__*/_jsx(Upload,{name:\"file\"// customRequest={handleUpload}\n,beforeUpload:()=>false// Отключаем автоматическую загрузку\n,children:/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(UploadOutlined,{}),children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"})})}):null,/*#__PURE__*/_jsx(Form.Item,{name:\"agreement\",valuePropName:\"checked\",rules:[{validator:(_,value)=>value?Promise.resolve():Promise.reject(new Error('Подтвердите свое согласие'))}],...tailFormItemLayout,children:/*#__PURE__*/_jsx(Checkbox,{children:\"\\u0414\\u0430\\u044E \\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0438\\u0435 \\u043D\\u0430 \\u043F\\u0435\\u0440\\u0435\\u0434\\u0430\\u0447\\u0443 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"})}),/*#__PURE__*/_jsx(Form.Item,{wrapperCol:{offset:6,span:16},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"})})]});};","map":{"version":3,"names":["React","useState","Button","Form","Input","Checkbox","Select","Upload","message","UploadOutlined","axios","regions","jsx","_jsx","jsxs","_jsxs","Option","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","form","useForm","selectedRegion","setSelectedRegion","localities","setLocalities","isMentor","setIsMentor","onRoleChange","value","handleRegionChange","selectedRegionData","find","region","label","locality","setFieldsValue","undefined","handleUpload","file","formData","FormData","append","response","post","headers","success","console","log","data","name","error","isAxiosError","onFinish","values","surname","email","school","password","role","agreement","currentDate","Date","toISOString","dataToSend","length","fileName","originFileObj","setTimeout","window","location","reload","russianLettersRegex","validateLocality","rule","Promise","reject","test","resolve","variant","style","width","justifySelf","children","Item","rules","required","validator","type","showSearch","placeholder","optionFilterProp","filterOption","input","option","toString","toLowerCase","indexOf","onChange","map","index","hasFeedback","Password","dependencies","_ref","getFieldValue","_","Error","tooltip","defaultValue","options","valuePropName","getValueFromEvent","e","Array","isArray","fileList","beforeUpload","icon","htmlType"],"sources":["/Users/alexselyukov/Documents/napp/portal/src/pages/AuthorizationPage/Registration/RegistrationForm.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Button,\n    Form,\n    Input,\n    Checkbox,\n    Select,\n    Upload,\n    message\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { regions } from '../../../data';\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 6 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 14 },\n    },\n};\n\nconst tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 16,\n        offset: 8,\n      },\n    },\n};\n\nexport const RegistrationForm: React.FC = () => {\n    const [form] = Form.useForm();\n    const [selectedRegion, setSelectedRegion] = useState<string>(''); // Хранение выбранного региона\n    const [localities, setLocalities] = useState<string[]>([]); // Список населенных пунктов для выбранного региона\n    const [isMentor, setIsMentor] = useState<boolean>(false);\n\n    const onRoleChange = (value: string) => {\n        if (!isMentor) {\n            setIsMentor(true);\n        } else {\n            setIsMentor(false);\n        }\n    };\n\n    const handleRegionChange = (value: string) => {\n        const selectedRegionData = regions.find(region => region.label === value);\n        setLocalities(selectedRegionData ? selectedRegionData.locality : []);\n        form.setFieldsValue({ locality: undefined }); // Сбрасываем значение locality при изменении региона\n    };\n\n    const handleUpload = async (file: any) => {\n        const formData = new FormData();\n        formData.append('file', file);\n      \n        try {\n            const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            message.success('Файл успешно загружен');\n            console.log('Файл успешно загружен:', response.data);\n            return file.name;  // Возвращаем имя файла\n        } catch (error) {\n            if (axios.isAxiosError(error)) {\n                message.error('Ошибка при загрузке файла');\n                console.error('Ошибка загрузки файла:', error.response ? error.response.data : error.message);\n            } else {\n                console.error('Ошибка:', error);\n            }\n            throw error;\n        }\n    };\n\n    const onFinish = async (values: any) => {\n        // Получаем значения формы\n        const { region, locality, name, surname, email, school, password, file, role, agreement } = values;\n        \n        let currentDate = null;\n\n        if (agreement) {\n            currentDate = new Date().toISOString(); // Если согласие дано, устанавливаем текущую дату\n        }\n\n        const dataToSend: any = {\n            region,\n            locality,\n            name,\n            surname,\n            email,\n            school,\n            password,\n            role,\n            // file,\n            agreement: agreement ? 'Да' : 'Нет',\n            currentDate,\n        };\n\n        if (role === '?наставник' && file && file.length > 0) {\n            try {\n                const fileName = await handleUpload(file[0].originFileObj); // Дожидаемся завершения загрузки файла\n                console.log(fileName)\n                if (fileName.length > 0) {\n                    dataToSend.file = fileName;\n                } else {\n                    dataToSend.file = 'None';\n                }\n            } catch (error) {\n                console.error('Ошибка загрузки файла:', error);\n                message.error('Ошибка загрузки файла');\n                return;\n            }\n        }\n        \n        try {\n            // Отправляем данные на сервер\n            const response = await axios.post('http://127.0.0.1:5000/register', dataToSend);\n            console.log('Registration successful:', response.data);\n            message.success('Регистрация прошла успешно');\n            setTimeout(() => {\n                window.location.reload();\n              }, 1500);\n\n        } catch (error) {\n            console.error('Registration failed:', error);\n            message.error('Ошибка при регистрации');\n        }\n    };\n\n    // Регулярное выражение для проверки на русские буквы, пробелы и тире\n    const russianLettersRegex = /^[А-Яа-яЁё\\s\\-]+$/;\n\n    // Функция для проверки валидности ввода\n    const validateLocality = (rule: any, value: string) => {\n        if (!value) {\n        return Promise.reject('Заполните поле');\n        }\n        if (!russianLettersRegex.test(value)) {\n        return Promise.reject('Пожалуйста, введите только кириллические буквы');\n        }\n        return Promise.resolve();\n    };\n\n\n    return (\n        <Form form={form} onFinish={onFinish} {...formItemLayout} variant=\"filled\" style={{ width: 600, justifySelf: \"center\" }}>\n            <Form.Item \n                label=\"Имя\" \n                name=\"name\" \n                rules={[\n                    { required: true, message: 'Заполните поле' },\n                    { validator: validateLocality }\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            \n            <Form.Item \n                label=\"Фамилия\" \n                name=\"surname\"\n                rules={[\n                    { required: true, message: 'Заполните поле' },\n                    { validator: validateLocality }\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            \n            <Form.Item\n                name=\"email\"\n                label=\"E-mail\"\n                rules={[\n                {\n                    type: 'email',\n                    message: 'The input is not valid E-mail!',\n                },\n                {\n                    required: true,\n                    message: 'Please input your E-mail!',\n                },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n    \n            <Form.Item\n                label=\"Регион\"\n                name=\"region\"\n                rules={[{ required: true, message: 'Выберите регион!' }]}\n            >\n                <Select\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Выберите ваш регион\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option?.children \n                            ? option.children.toString().toLowerCase().indexOf(input.toLowerCase()) >= 0 \n                            : false\n                    }\n                    onChange={handleRegionChange} // Обработчик изменения выбранного региона\n                >\n                    {regions.map((region, index) => (\n                        <Option key={index} value={region.label}>{region.label}</Option>\n                    ))}\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Населенный пункт\"\n                name=\"locality\"\n                rules={[\n                    { required: true, message: 'Выберите населенный пункт!' },\n                    { validator: validateLocality }\n                ]}\n            >\n                <Select\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Выберите ваш населенный пункт\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option?.children \n                            ? option.children.toString().toLowerCase().indexOf(input.toLowerCase()) >= 0 \n                            : false\n                    }\n                >\n                    {localities.map((locality, index) => (\n                        <Option key={index} value={locality}>{locality}</Option>\n                    ))}\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Название школы\"\n                name=\"school\"\n                rules={[\n                    { required: true, message: 'Заполниет поле' },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                name=\"password\"\n                label=\"Придумайте пароль\"\n                rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n                ]}\n                hasFeedback\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                name=\"confirm\"\n                label=\"Повторите пароль\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                {\n                    required: true,\n                    message: 'Please confirm your password!',\n                },\n                ({ getFieldValue }) => ({\n                    validator(_, value) {\n                    if (!value || getFieldValue('password') === value) {\n                        return Promise.resolve();\n                    }\n                    return Promise.reject(new Error('The new password that you entered do not match!'));\n                    },\n                }),\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n     \n            <Form.Item\n                name=\"role\"\n                label=\"Вы наставник?\"\n                tooltip=\"Вы должны быть школьным учителем и предоставить документ подтверждающий статус\"\n            >\n                <Select\n                    defaultValue=\"Нет\"\n                    style={{ width: 120 }}\n                    onChange={onRoleChange}\n                    options={[\n                        { value: '?наставник', label: 'Да' },\n                        { value: 'участник', label: 'Нет' },\n                    ]}\n                />\n            </Form.Item>\n\n            {\n                isMentor \n                ?\n                <Form.Item\n                    name=\"file\"\n                    label=\"Загрузите файл\"\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={(e) => (Array.isArray(e) ? e : e && e.fileList)}\n                    rules={[{ required: true, message: 'Загрузите файл подтверждающий статус' }]}\n                >\n                    <Upload \n                        name=\"file\"\n                        // customRequest={handleUpload}\n                        beforeUpload={() => false} // Отключаем автоматическую загрузку\n                    >\n                        <Button icon={<UploadOutlined />}>Загрузить</Button>\n                    </Upload>\n                </Form.Item>\n\n                : null\n            }\n\n            <Form.Item\n                name=\"agreement\"\n                valuePropName=\"checked\"\n                rules={[\n                {\n                    validator: (_, value) =>\n                    value ? Promise.resolve() : Promise.reject(new Error('Подтвердите свое согласие')),\n                },\n                ]}\n                {...tailFormItemLayout}\n            >\n                <Checkbox>\n                    Даю согласие на передачу персональных данных\n                </Checkbox>\n            </Form.Item>\n        \n            <Form.Item wrapperCol={{ offset: 6, span: 16 }}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Зарегистрироваться\n                </Button>\n            </Form.Item>\n      </Form>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}