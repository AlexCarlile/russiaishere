{"ast":null,"code":"import React,{useState}from'react';import{Form,Input,DatePicker,Button,message}from'antd';import Cookies from'js-cookie';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{RangePicker}=DatePicker;export const CampaignForm=()=>{const[form]=Form.useForm();const[campaigns,setCampaigns]=useState([]);const fetchCampaigns=async()=>{try{const response=await axios.get('http://127.0.0.1:5000/campaigns');setCampaigns(response.data);}catch(error){console.error('Failed to fetch campaigns:',error);}};const onFinishFailed=errorInfo=>{console.log('Failed:',errorInfo);};const token=Cookies.get('token');const headers={'Authorization':\"Bearer \".concat(token)};const handleSubmit=async values=>{const formData=new FormData();formData.append('title',values.title);formData.append('description',values.description);formData.append('start_date',values.dates[0].toISOString());formData.append('end_date',values.dates[1].toISOString());// Here, we use the native input file element to get the selected file\nconst fileInput=document.getElementById('fileInput');if(fileInput.files&&fileInput.files[0]){formData.append('image',fileInput.files[0]);}else{console.error('Image file is null or undefined');}try{const response=await axios.post('http://127.0.0.1:5000/campaigns',formData,{headers:{...headers,'Content-Type':'multipart/form-data'}});console.log('Новая акция добавлена:',response.data);message.success('Новая акция успешно добавлена');fetchCampaigns();// Запросить обновленный список акций\nform.resetFields();// Сброс формы\n}catch(error){console.error('Ошибка при добавлении акции:',error);message.error('Ошибка при добавлении акции');}};return/*#__PURE__*/_jsxs(Form,{form:form,name:\"campaignForm\",onFinish:handleSubmit,onFinishFailed:onFinishFailed,initialValues:{dates:[]},children:[/*#__PURE__*/_jsx(Form.Item,{name:\"title\",label:\"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\",rules:[{required:true,message:'Введите заголовок акции'}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"description\",label:\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",children:/*#__PURE__*/_jsx(Input.TextArea,{})}),/*#__PURE__*/_jsx(Form.Item,{name:\"dates\",label:\"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u044F\",rules:[{required:true,message:'Выберите даты'}],children:/*#__PURE__*/_jsx(RangePicker,{})}),/*#__PURE__*/_jsx(Form.Item,{label:\"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\",children:/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"fileInput\",accept:\"image/*\"})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"})})]});};","map":{"version":3,"names":["React","useState","Form","Input","DatePicker","Button","message","Cookies","axios","jsx","_jsx","jsxs","_jsxs","RangePicker","CampaignForm","form","useForm","campaigns","setCampaigns","fetchCampaigns","response","get","data","error","console","onFinishFailed","errorInfo","log","token","headers","concat","handleSubmit","values","formData","FormData","append","title","description","dates","toISOString","fileInput","document","getElementById","files","post","success","resetFields","name","onFinish","initialValues","children","Item","label","rules","required","TextArea","type","id","accept","htmlType"],"sources":["/Users/alexselyukov/Documents/napp/portal/src/pages/Personal/PersonalAreaContent/Campaigns/CampaignForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, DatePicker, Button, message } from 'antd';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\n\nconst { RangePicker } = DatePicker;\n\nexport const CampaignForm: React.FC = () => {\n    const [form] = Form.useForm();\n    const [campaigns, setCampaigns] = useState<any[]>([]);\n\n    const fetchCampaigns = async () => {\n        try {\n            const response = await axios.get('http://127.0.0.1:5000/campaigns');\n            setCampaigns(response.data);\n        } catch (error) {\n            console.error('Failed to fetch campaigns:', error);\n        }\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const token = Cookies.get('token');\n\n    const headers = {\n        'Authorization': `Bearer ${token}`\n    };\n\n    const handleSubmit = async (values: any) => {\n        const formData = new FormData();\n        formData.append('title', values.title);\n        formData.append('description', values.description);\n        formData.append('start_date', values.dates[0].toISOString());\n        formData.append('end_date', values.dates[1].toISOString());\n        \n        // Here, we use the native input file element to get the selected file\n        const fileInput = document.getElementById('fileInput') as HTMLInputElement;\n        if (fileInput.files && fileInput.files[0]) {\n            formData.append('image', fileInput.files[0]);\n        } else {\n            console.error('Image file is null or undefined');\n        }\n\n        try {\n            const response = await axios.post('http://127.0.0.1:5000/campaigns', formData, {\n                headers: {\n                    ...headers,\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            console.log('Новая акция добавлена:', response.data);\n            message.success('Новая акция успешно добавлена');\n            fetchCampaigns(); // Запросить обновленный список акций\n            form.resetFields(); // Сброс формы\n        } catch (error) {\n            console.error('Ошибка при добавлении акции:', error);\n            message.error('Ошибка при добавлении акции');\n        }\n    };\n\n    return (\n        <Form\n            form={form}\n            name=\"campaignForm\"\n            onFinish={handleSubmit}\n            onFinishFailed={onFinishFailed}\n            initialValues={{ dates: [] }}\n        >\n            <Form.Item\n                name=\"title\"\n                label=\"Заголовок\"\n                rules={[{ required: true, message: 'Введите заголовок акции' }]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item name=\"description\" label=\"Описание\">\n                <Input.TextArea />\n            </Form.Item>\n            <Form.Item name=\"dates\" label=\"Дата проведения\" rules={[{ required: true, message: 'Выберите даты' }]}>\n                <RangePicker />\n            </Form.Item>\n            <Form.Item label=\"Изображение\">\n                <input type=\"file\" id=\"fileInput\" accept=\"image/*\" />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Добавить\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}